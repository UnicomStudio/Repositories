name: Update ReadCat

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: "0 */1 * * *"

jobs:
  prepare:
    name: Get upstream release info
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.get-basic-info.outputs.release }}
      pkgver: ${{ steps.get-basic-info.outputs.pkgver }}
      subver: ${{ steps.get-basic-info.outputs.subver }}
      source: ${{ steps.get-basic-info.outputs.source }}
      sha256sums: ${{ steps.get-basic-info.outputs.sha256sums }}
    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Get basic info
        id: get-basic-info
        run: |
          RELEASE_INFO=$(curl -s https://api.github.com/repos/read-cat/read-cat/releases | jq -M '.[0].assets[] | select(.browser_download_url | test("linux-x64"))' | jq -cs '.')
          TAG_INFO=$(curl -s https://api.github.com/repos/read-cat/read-cat/releases | jq -r '.[0].tag_name')
          TAG_INFO=${TAG_INFO#v}
          read MAJOR_VERSION SUB_VERSION <<< $(echo $TAG_INFO | awk -F '[-]' '{print $1,$2}')
          echo "release=$RELEASE_INFO" >> "$GITHUB_OUTPUT"
          echo "pkgver=$MAJOR_VERSION" >> "$GITHUB_OUTPUT"
          echo "subver=$SUB_VERSION" >> "$GITHUB_OUTPUT"
          DOWNLOAD_URLS=$(echo $RELEASE_INFO | jq -r '.[].browser_download_url')
          for url in $DOWNLOAD_URLS; do
            if [[ $url == *".sha256.txt" ]]; then
              echo "sha256sums=$(curl -sL $url | grep -v '^$' | head -n 1)" >> "$GITHUB_OUTPUT"
            else
              echo "source=$url" >> "$GITHUB_OUTPUT"
            fi
          done

  edit-pkgbuild:
    needs: prepare
    name: Edit PKGBUILD and push
    runs-on: ubuntu-latest
    container: archlinux
    env:
      PKG_VER: ${{ needs.prepare.outputs.pkgver }}
      PKG_SUB_VER: ${{ needs.prepare.outputs.subver }}
      SOURCE: ${{ needs.prepare.outputs.source }}
      SHA256: ${{ needs.prepare.outputs.sha256sums }}
      ARCH_PKG_NAME: read-cat-insiders-bin-${{ needs.prepare.outputs.pkgver }}-1-x86_64.pkg.tar.zst
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install dependencies and update
        run:
          pacman -Syu --noconfirm --noprogressbar --needed base-devel git pacman-contrib
      - name: Update version
        id: bump-version
        working-directory: read-cat-insiders-bin
        run: |
          sed -i "s/pkgver=.*$/pkgver=${PKG_VER}/" PKGBUILD
          sed -i "s/_pkgsubver=.*$/_pkgsubver=${PKG_SUB_VER}/" PKGBUILD
          sed -i "s|source_x86_64=.*|source_x86_64=('${SOURCE}')|" PKGBUILD
          sed -i "s|sha256sums_x86_64=.*|sha256sums_x86_64=('${SHA256}')|" PKGBUILD
          cat PKGBUILD
      - name: Generate .SRCINFO
        working-directory: read-cat-insiders-bin
        run: |
          useradd builder -m
          echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
          chmod -R a+rw .
          sudo -Eu builder makepkg --printsrcinfo > .SRCINFO
      - name: Build package
        uses: 2m/arch-pkgbuild-builder@main
        with:
          target: pkgbuild
          pkgname: "read-cat-insiders-bin"
      - name: Generate package sha256sums
        working-directory: read-cat-insiders-bin
        run: |
          chmod -R a+rw .
          sudo -Eu builder updpkgsums
      - name: Upload PKGBUILD artefact
        uses: actions/upload-artifact@v4
        with:
          name: PKGBUILD
          path: read-cat-insiders-bin/PKGBUILD
      - name: Upload .SRCINFO artefact
        uses: actions/upload-artifact@v4
        with:
          name: .SRCINFO
          path: read-cat-insiders-bin/.SRCINFO
      - name: Upload package artefact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARCH_PKG_NAME}}
          path: read-cat-insiders-bin/${{ env.ARCH_PKG_NAME}}

  update-pkgbuild:
    name: Update PKGBUILD
    needs: [prepare, edit-pkgbuild]
    runs-on: ubuntu-latest
    env:
      PKG_VER: ${{ needs.prepare.outputs.pkgver }}
      PKG_SUB_VER: ${{ needs.prepare.outputs.subver }}
    steps:
      - uses: actions/checkout@v4
      - name: Download PKGBUILD artefact
        uses: actions/download-artifact@v4
        with:
          name: PKGBUILD
          path: read-cat-insiders-bin/
      - name: Download .SRCINFO artefact
        uses: actions/download-artifact@v4
        with:
          name: .SRCINFO
          path: read-cat-insiders-bin/
      - name: Push update
        working-directory: read-cat-insiders-bin
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add PKGBUILD .SRCINFO

          if git diff --cached --quiet; then
            echo "No changes detected. Skipping commit."
          else
            git commit -m "üêé ci(ReadCat): Update to v${PKG_VER}_${PKG_SUB_VER}"
            git push
          fi
